CHANGELOG FOR TMG_MOD

r32:
Fixed double+ rails to check to see if player hit was an enemy before adding it to number of players hit.
Fixed yes votes not clearing on mapvote fail.
Fixed oplist/listops command to display ops correctly.
Added sounds for double+ rails and some more sounds sprees/headshots.
Added "rconmode" admin command for binding a key to enter rcon commands in messagemode.
Added displaying of maplist for available maps to vote on when client types mapvote with no option.

r36:
Changed yes/no vote commands to not set the client's vote to yes or no until a vote is in progress.
Added new CVAR: 'cfgdir'. You may want to run multiple servers from the same directory. This allows you to set
  those servers up independently. Please note that you must have a logs, nav, ent, and hs folder in each cfg directory. This
  is changed to read from cfg directory instead of the game directory. Also the bot_detected.txt is now bot_detected.log
  and will be in your logs directory. Also this is a noset cvar and must be set from the command line when starting the server.
Mapvoting is now available via client menu. Also choosing yes or no to vote is in same menu.
Fixed mapvote client command to not exec during map voting for end of level.
Added End of Level map change vote to client menu.

r37:
Debugging step build

r38:
Fixed highscores causing a crash in Linux servers with long map names.

r39:
Fixed map nicks being too long screwing up op and vote maplist menus.

r40-42:
Code/SVN Repo Maintenance

r??
QwazyWabbit
Added "hscores" command so user can see highscores of current map at will.
Added cvars highscores and show_highscores.
Cvar highscores enables highscore command and display. Default: true
Cvar show_highscores enables display at intermission. Default: false
Improved highscore management and added some diagnostics.
Added DbgPrintf function that outputs to debugger in Windows if a debugger 
is present and debug builds or prints to server console and log file on 
non-Windows systems if developer cvar is set.
Bumped game version to 2.12.

0.2.15
Added efficiency stats to HUD in player and chase modes.
Eff is displayed as percentage and also as ratio of frags/shots fired.
Fixed match countdown timer format so it's always double digits.
Added flag_bonus and flag_return_time cvars.
Fix deathmatch join. Fix highscores display at intermission and on command in DM.
Fixed mapvote. Solo player on a server full of bots can now vote a map change.
Some bot code maintenance. Removed useless global NumBotsInGame maintenance.
Improved/renamed GetNumBots().
Changed names of cvars: map_change, map_randomize, map_once, map_debug.
Fixed WallFly blockout.
HUD motd now shows for 3 seconds and then closes, spawning player as spectator.
Change <SPECTATOR> to <SPEC> for WallFly compatibility. Some code style changes.
Moved CTFCalcScores and SaveHighScores calls into BeginIntermission
just prior to moving all clients to intermission.

0.2.16
Add tracking of flag captures to player HUD. Planning to add captures to scoreboard display.

0.2.17
Added flag capture count per player to CTF scoreboard. 
Added cvar support, "newscore" for admin configuration of preferred scoreboard.

0.2.18
Add server option to display scoreboard on death. Default to off. ctf_deathscores

0.2.19
Fixed map rotation bugs.

0.2.20
Added log file management. (log_manager.c)
Cvars added:
logfile_name        // the server or qconsole.log file
logfile            // the logfile mode control
logfile_rename    // how often we rename the server log file
0 = never, 1 = daily, 2 = weekly, 3 = monthly, default: 2

0.2.21
Fixed bot spawn file parser error reporting.
Various technical code changes.

0.2.22
Edits to makefiles. Created GNUmakefile & BSDmakefile.
Added tracking of hooks deployed and hooks landed for stats logging.

0.2.23
Fix suicide messages.
Fix hooks crashing server when player kills himself or disconnects while hooking.
Test code for fixing hook spamming of server.
Add "ver" command for printing of version and build information in game.

0.2.24
Add HUD documentation about how HUD placements are determined. (from LOX code)
Relocate banner to its own header to allow edit and continue in VS.
Delete banner from g_local.h.
Eliminate unneeded catching of hook spamming.
Send message to user if he uses kill command that it's prevented.
Note: the trapping of kill commands seems to be there to prevent bogus player
state when switching from active to dead player. The game puts him into
chase mode instead of dead.
Fix bot lerping.
Fix bot wall-spawning and crushing in maps.
Add some debugging output to the spawnpoint searches.

0.2.25
Fix portability of line endings and comment blocks in bot config files.
Added hack to allow doors to remain open after portal tripped.
Use the cvar "doors_stay_open" to activate this feature.

0.2.26
OP-file and Op Menu modifications.

0.2.27
Added CTFScoreboardMessageNew for easier maintenance.
Fixed bugs in original and new CTFScoreboardMessages.
Fix ancient bug where "Spectators" block was sent twice in the same scoreboard message.
Removed OP_* tags in chat names to avoid confusing Wallfly.
Eliminate cheater checks. Q2admin and r1q2 do our cheat checking.
Added flag_bonus and flag_return_time cvars.
Fix bug in mdsoft_NextMap that prevented 0th map in list being selected.
Other non-functional changes.
Removed last vestiges of isop, ismop and op variables.
Now client->pers.oplevel handles all op qualifications. Only one variable to maintain.
Added bot ON/OFF command to OP_Menu. Operators have this command if they have OP_PLAYERCONTROL permission.
Fix gi.setmodel call with empty model name in player_die. It was causing warning messages in r1q2 server engine when sv_gamedebug=1.
Fix bug where highscores weren't showing up in intermission.
Expanded bot control menu.

0.2.28
Cleaning up STAT_* constants.
Trimming size of deathmatch scoreboard message.
Fix broken logic in blank/empty name tests. 
Remove unneeded code for hook spam catch. Add "location" command and display the player's location in his HUD.
Type 'location' in console and the location info toggles on/off.

0.2.29
Remove unneeded code for hook spam catch. 
Extended the range of railgun tracing. You can now frag players from longer distances.
Delete <OP> tag from chat messages. It interferes with WallFly. 
Fixing DM scoreboard message. Still a work in progress, it can malfunction with 20+ players on server. 
Add space for long names. 
Added ability for OPs to invoke default configuration files 
from the Operators menu. Made the bot control menu dynamic. 
Added cvars for the default config strings so sysop can 
control the CTF and FFA configurations the operator menu uses.
Fix a buffer overflow in scoreboard message.
Faster HUD update rates.

0.2.30
Refactored FPH and FPM calculations and put the calls 
into G_SetStats. G_SetStats gets called in ClientEndServerFrame 
and BotEndServerFrame. FPM is still unused but we do the 
calculation anyway. The stats are now kept in client respawn struct
where they belong. HUD doesn't have to do a function call to get them.
Added UTC mode to HUD server time display. Rectified server_time cvar.
Rectified configstring overlap introduced by Raven that made 
"skins" command malfunction and spew bad client numbers on bots and players.
Fix HUD so it doesn't display caps when not in CTF mode.
Some other misc. changes removing dead code and some comments.
Remove unused cvars and clean up some functions.
More hud work. There's always time for hud work.
Update BSDMakefile and a comment in g_save.c.

0.2.31
Removed unused global, "voted".
Rename stuffcmd to StuffCmd for style consistency. 
In Q2 code, global functions are camel cased.
Eliminate some double-double buffering.

0.2.32
Pulled prototypes out of g_local.h and into g_func.h. Other cosmetic changes.
Add debugging output to LoadHighScores. Add documentation to DbgPrintf.
Minor tweak of GetDate & GetTime definitions.
Fix bugs in LogChat. Cleanup InitGame and fold some initialization into ServerInit.

0.2.33
Guard against potential null pointer dereference in G_RunFrame.
Remove more unused variables and operations.
Fix bug that caused white text where it should have been highlighted.
Op menu Restart Level now restarts level instead of executing gamemap.
Refactored s_map code.

0.2.34
Fix bug in safe_bprintf where highlighting was lost.
Fix index past end of map list. Fix bug where mdsoft_NextMap 
entered infinite loop if map_randomize = 0 and map_once = 1. 
Test and clear visited flags on map list when all maps become 
visited. Restrict cases where mdsoft_NextMap can return NULL.

0.2.35
Fix bug where the server would not show clients entering server to all clients.
Eliminate superfluous client counting function.
Fix my_bprintf/safe_*printf format string hole
Don't expand printf conversion specifiers twice in my_bprintf or the
ironically-named safe_{b,c,center}printf functions.
Fix FPH and FPM to only use resp.frags so caps and other points don't count toward higher frag rates.
Fix error in showbannedfile command.
Don't save highscores of 3zb2 bots. Silence Ubuntu's gcc about fread calls.
Add error reporting to wav_mod_setup function.
Report error if reading file in SaveHighScores.
Update BSDmakefile to build and link 32-bit code and libs.
Eliminate annoying delay for MOTD where server ignores client commands at connect/reconnect.
Added conditionals for 32 or 64 bit builds.
Portability to 64-bits.

0.2.36
Quick hack to allow a longer list of wav files in intro.txt.
Fix to extend song list. See comments in intro.c.
Delete call to PrecacheSongs in SP_worldspawn
Begin refactoring for wav_mod.

0.2.37
Use constants from game instead of numeric constants. Add debugging info and error checks. 
Eliminate some dead store per clang static analysis. Some cosmetic changes for consistency of code format.
Cleanup Wav_Mod_Setup.
Add support for motd.txt and eliminate HUD-based MOTD.
Initial spectate mode is still broken, needs fixing. (No tilt.)

0.2.38
Add support for motd.txt and eliminate HUD-based MOTD.
Initial spectate mode is still broken, needs fixing. (No tilt.)
Fix bug in target_laser_think, somehow a line was commented out in the original code inherited by Josh.
Replace gslog and sl_logging with QwazyWabbit's own StatsLog output.

0.2.39
Fix semantic issues and stuff spotted by clang.
Update makefiles for Linux.
Update stats management document.
Using Com_sprintf instead of naked sprintf.
Add team total scores and captures to stats summary.
Flush stats file before renaming it on schedule.
Fixes for stats log and console log backups.
Tidy up the cvars related to stats and console logs.

0.2.40
Highlight only the banner lines of motd, not the file text. 
Can't control what's in it and highlighting remaps some chars to different glyphs.
Changes for Wallfly and suppress warning in Ubuntu.
Reduce usage of naked sprintf.
Add note in GNUmakefile on how to build 32-bit dll on x64 systems.
Fixes for putting client in server. Fix buffer overflow in ClientConnect (player[]).
Prevent buffer overflows and use manifest constants instead of numeric constants in array sizes.
Use gamedebug cvar instead of developer for debug output in Windows release builds and on Linux.
Added support for using .nav files for chain file loads and saves per older versions. Defaults to use_navfiles = 1.
More fun with trying to fix bot spawning inside walls.
Rectify bot skins in CTF mode so they have proper team color. More buffer sizing and sprintf replacement.
Fix logical flow of StatsLog function. Hook logging tells what map we're on.
Give gibs, heads and routes a classname. Adjust player_die yet again.
Let BotAssignTeamCtf align the bot skins. 
Bots wait longer on respawn... troubleshooting bad spawn locations.
Remove unused/unreferenced cruft from anticheat module.
Document the added mapname to the HOOKS output.
Refactored usage of CanUsewep() and other 'assignment within conditional expression' idiomatic usages.
Stop game from making server do unnecessary work.
Enable player ID in free cam mode.
Let bots chill for 1/2 second instead of 1 sec. It didn't help the wall-spawn issue.
Fix excessive stack usage due to oversizing of buffers.
Clean up some initializations.
Move hud data further to the right.
Set 30 second minimum warmup time. 
NOTE: you must set warmup_time 0 to get zero warmup.

0.2.41
Fixed a bug where disconnected players sometimes don't fully disappear.
Send warning to console if MOTD text will exceed 40 characters.
Fix "no such oldframe" message in some clients. This bug is due to a hack
in the player_die function where the head gib toss was removed and the dead
player model is set to empty string. While this stops the head gib from
lerping on player respawn, any attempt to "fix" the empty model name
results in "no-such-oldframe" error in clients. Catch-22: set the empty
string and get warnings in the server, choose something else, get warnings
in the clients.
Set limit of 100 files for WaveMod. Gracefully handle case were limit is
exceeded.

0.2.42
Fix bug where map votes could never pass.
Handle WallFly case so he isn't counted for voting.
Flush the stats log between maps or where commands cause resets
to prevent lost stats data.
Stop writing highlighted text to logs.

0.2.43
Cover case where input file might have been opened but output file open failed.
Remove duplicate code blocks.
Correctly handle dynamic player and op menu items. When player is spectator, remove
"Spectate" from from the player menu.
More null pointer checks and improved error reporting.
For compatibility with Tastyspleen's WallFly we removed the OP labels from player tags. 
This change removes the now unneeded checks for OP status.
Some configurations used set warmup_time 1 for "no warmups". This change takes that into account and allows 0 or 1 to indicate "no warmup".

After forgetting to update this file for a very long time.

0.2.53
Move the top right corner HUD statistics down 10 units to allow space for FPS output from Q2RTX.

0.2.54
Refactored CheckFlood.
Use a version of Knightmare's Q_strncpyz & Q_strncatz functions.
Restored PrecacheSongs for music intros.

0.2.55
Renamed internal cvars for ffa and ctf modes. (removed underscores to align with config statements)

0.2.56

0.2.57
Style and misc. cleanups.
Bug fix for returning blue flag.

0.2.58
Create ctf/cfg/hs/, ctf/logs/ and ctf/stats/ directories if they don't exist.
Flush stats log in ShutdownGame.

0.2.59
Initialize Wav cvars in a function.
Added _USE_MATH_DEFINES to get POSIX math constants when targeting WIN32.

0.2.60
No significant functional changes.
Raise warning levels on Linux. Catch more lint.
Tidy up code where initializers or indentation was wrong or fallthroughs occur.

Completed
2. Player name on freecam was fixed, but I may have to fix it again so it's still on the list.
3. Same with bug in lockteams on the admin menu.
4. Make highscores available anytime via a console cmd.
21. Kill/Death counter. I did this once already but think it needs done again.
26. no_hum CVAR, make it global.

Not Completed
1. Ignore command for player chat, so you can lock out seeing chat from certain players.
5. Persistent player data, either by server or by a GDS of some sort, with stats and website.
6. Match mode values, with display to show what values have been changed.
7. Vote options for earthquakes, lighting, rail speed, gravity (lighting is already available to admins, I will add the earthquakes in and make them available via cvar's and admin options as well).
8. Colored contrails (red/blue).
9. Overhaul the iddist function, make it like the one I wrote for Lasermine2.
10. Also from Lasermine2, add the flashlight, flares, and nukes, all admin configurable naturally.
11. Options for runes.
12. Look closer at server messages, such as player entry, team kills, etc, do some overhauling.
13. Another Lasermine thing, the spam cannon. I overhauled it for Lasermine2, and had many suggestions on this one. Also, an option for making spam control apply to team chat as well.
14. For server admins, create a CSV file of player names and the IP's they use.
15. Put in a system to allow players to play sounds on their team's computer via binds (some mods have this already, just can't remember which, it's been so long.) Would also have spam control on it to prevent players from annoying teammates, and since the sounds would be client side players can change the files to say what they want.
16. I know it's crazy, but I actually got several requests for the sticky hook to come back :P It'll be a server admin option, possibly a vote, too.
17. Another vote: Player Kick.
18. CVARs for point values, of course there will be defaults, but I may also add something like a gametype of "Kill the Carrier" or "Defend the Base" where you get bonus points for those types of kills. I think this could really add some fun to the game and mix things up a little.  With the gametypes I could make it harder to get those points, such as make the player shoot the flag carrier twice, or players in the base be stealth, or something. 
19. There was talk of colored chat messages. This will almost absolutely have to be a client side exe modification in conjunction with the dll to work. Not sure how likely it is this one will be done.
20. There's arguments over the spawn protection. I plan on making a flag for it so that admins can handle it the way they want, either by time, if they get shot once it disappears, or if they use the hook or rail it disappears, or they cannot shoot until their protection is off. Maybe make the respawned player get thrown when he is hit but not affect the protect. Also, make a CVAR for flag carriers to be able to shoot through the protection. 
22. Change around the maplist a bit, put in a value for whether or not that particular map can be voted on, and maybe how likely the map is to come up in the rotation.
23. This one goes way back: bonus for evening teams. Keep your score, get a bonus, whatever. It's been on my mind since the beginning but I've never actually worked on it.
24. Hook gravity CVAR, everyone knows how that went over, so I'll make it a CVAR and let you play with it.
25. In the ops file, add the name and IP of the person who promoted or demoted an op. There is some other reworking that needs to be done here as well.
27. Various bugs and security issues, which I won't describe here for obvious reasons. 
28. Private chat function, so players can send messages to specific people and set up a group of people to send chat to.
29. Option for ricochet slugs.
30. Add a speedometer of sorts to the HUD.

